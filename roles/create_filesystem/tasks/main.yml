---

- name: open LUKS container on /dev/{{disk_scheme.device}}{{disk_scheme.crypt_part.partition}}
  community.crypto.luks_device:
    device: "/dev/{{disk_scheme.device}}{{disk_scheme.crypt_part.partition}}"
    state: "opened"
    name: "{{crypt_mount_name}}"
    passphrase: "{{crypto_become_pass}}"

- name: Create a volume group on /dev/{{disk_scheme.device}}{{disk_scheme.crypt_part.partition}}
  lvg:
    vg: "{{crypt_volume_group_name}}"
    pvs: "/dev/mapper/{{crypt_mount_name}}"

- name: create swap logical volume
  lvol:
    vg: "{{crypt_volume_group_name}}"
    lv: swap
    size: "{{crypt_swap_size}}g"
  register: create_swap_lv

- name: mkswap for swap LV
  command: mkswap "/dev/{{crypt_volume_group_name}}/swap"
  when: create_swap_lv.changed is true
  register: mkswap

- name: create root logical volume
  lvol:
    vg: "{{crypt_volume_group_name}}"
    lv: root
    size: "{{crypt_root_size}}g"

- name: create a ext4 filesystem on root
  filesystem:
    fstype: ext4
    dev: "/dev/{{crypt_volume_group_name}}/root"

- name: determine if home LV exists for idempotency
  shell: lsblk --raw -n | grep "{{crypt_volume_group_name}}-home"
  register: lv_home_state
  failed_when: lv_home_state.rc > 1
  changed_when: false

- block: # when home logical volume doesn't exist
  - name: create home logical volume
    lvol:
      vg: "{{crypt_volume_group_name}}"
      lv: home
      size: 100%VG

  - name: create a ext4 filesystem on root
    filesystem:
      fstype: ext4
      dev: "/dev/{{crypt_volume_group_name}}/home"
  when: lv_home_state.rc == 1

- name: mount boot partitions
  mount:
    src: "{{mount_partitions.source}}"
    path: "{{mount_partitions.dest}}"
    fstype: ext4
    state: mounted
  loop:
    - { source: "/dev/{{crypt_volume_group_name}}/root" , dest: /mnt }
    - { source: "/dev/{{crypt_volume_group_name}}/home", dest: /mnt/home }
    - { source: "/dev/{{disk_scheme.device}}{{disk_scheme.boot_part.partition}}", dest: /mnt/boot }
  loop_control:
    loop_var: mount_partitions

- name: swapon
  command: swapon "/dev/{{crypt_volume_group_name}}/swap"
  when: create_swap_lv.changed is true
